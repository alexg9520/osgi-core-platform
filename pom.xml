<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>core-parent</artifactId>
	<groupId>media.alera.osgi.core</groupId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>OSGi Core Parent</name>
	<properties>
		<name.aws>aws</name.aws>
		<embedded.scope>compile</embedded.scope>
		<maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<bnd.version>7.0.0</bnd.version>
		<dependency-check-maven.version>6.0.0</dependency-check-maven.version>
		<jackson.version>2.17.0</jackson.version>
		<slf4j.version>2.0.13</slf4j.version>
		<logback.version>1.4.14</logback.version>
		<junit-jupiter.version>5.10.2</junit-jupiter.version>
    	<junit-platform.version>1.10.2</junit-platform.version>
		<assertj.version>3.25.3</assertj.version>
		<maven.surefire.version>3.2.5</maven.surefire.version>
		<jacoco.version>0.8.12</jacoco.version>
    	<schema.version>4.35.0</schema.version>
		<osgi.core.bundle.version>1.0.0.${maven.build.timestamp}-local-dev</osgi.core.bundle.version>
		<osgi.core.bundle.headers>Automatic-Module-Name: ${project.groupId}.${package.name}
			Bundle-Name: ${project.groupId}.${package.name}
			Bundle-SymbolicName: ${project.groupId}.${package.name}
			Bundle-Version: ${osgi.core.bundle.version}</osgi.core.bundle.headers>
		<sonar.sources>src/main/java</sonar.sources>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.junit.reportsPath>target/surefire-reports</sonar.junit.reportsPath>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.coverage.jacoco.xmlReportPaths>./../osgi-core-report-aggregate/target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.language>java</sonar.language>
	</properties>
	<modules>
		<module>core-init</module>
		<module>core-shared</module>
		<module>core-app</module>
    <module>core-app-test</module>
	</modules>
	<profiles>
		<profile>
			<!-- Use this profile when an ide fails to retrieve
			media.alera.osgi.core projects during the bnd-process -->
			<id>bnd</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<embedded.scope>provided</embedded.scope>
			</properties>
		</profile>
		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<formats>
										<format>XML</format>
									</formats>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<repositories>
		<repository>
			<id>OSGi</id>
			<name>OSGi public binaries</name>
			<url>https://oss.sonatype.org/content/repositories/osgi-releases/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>OSGi Snapshots</id>
			<name>OSGi public snapshot binaries</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>Apache Snapshots</id>
			<url>https://repository.apache.org/content/groups/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.service.component</artifactId>
				<version>1.5.1</version>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.service.event</artifactId>
				<version>1.4.1</version>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.service.metatype</artifactId>
				<version>1.4.1</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.platform</groupId>
				<artifactId>org.eclipse.core.runtime</artifactId>
				<version>3.30.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.gogo.command</artifactId>
				<version>1.1.2</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.gogo.runtime</artifactId>
				<version>1.1.6</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.gogo.shell</artifactId>
				<version>1.1.4</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.platform</groupId>
				<artifactId>org.eclipse.equinox.cm</artifactId>
				<version>1.5.300</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.platform</groupId>
				<artifactId>org.eclipse.osgi</artifactId>
				<version>3.18.600</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.platform</groupId>
				<artifactId>org.eclipse.osgi.services</artifactId>
				<version>3.11.200</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.platform</groupId>
				<artifactId>org.eclipse.osgi.util</artifactId>
				<version>3.7.300</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.platform</groupId>
				<artifactId>org.eclipse.equinox.console</artifactId>
				<version>1.4.600</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.platform</groupId>
				<artifactId>org.eclipse.equinox.console.ssh</artifactId>
				<version>1.2.1100</version>
			</dependency>
			<dependency>
				<groupId>org.apache.sshd</groupId>
				<artifactId>sshd-osgi</artifactId>
				<version>2.12.0</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.platform</groupId>
				<artifactId>org.eclipse.equinox.console.jaas.fragment</artifactId>
				<version>1.1.100</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.sshd</groupId>
						<artifactId>org.apache.sshd.osgi</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
      <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
          <version>${jackson.version}</version>
      </dependency>
      <dependency>
          <groupId>org.eclipse.platform</groupId>
          <artifactId>org.eclipse.equinox.common</artifactId>
          <version>3.19.100</version>
      </dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>${jackson.version}</version>
			</dependency>
      <dependency>
          <groupId>com.fasterxml</groupId>
          <artifactId>classmate</artifactId>
          <version>1.7.0</version>
      </dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.http.jetty</artifactId>
				<version>5.1.10</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.http.servlet-api</artifactId>
				<version>2.1.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.scr</artifactId>
				<version>2.2.10</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>osgi-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.spifly</groupId>
				<artifactId>org.apache.aries.spifly.dynamic.bundle</artifactId>
				<version>1.3.7</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.spifly</groupId>
				<artifactId>org.apache.aries.spifly.dynamic.framework.extension</artifactId>
				<version>1.3.7</version>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.util.promise</artifactId>
				<version>1.2.0</version>
			</dependency>
      <dependency>
          <groupId>org.osgi</groupId>
          <artifactId>org.osgi.util.function</artifactId>
          <version>1.2.0</version>
      </dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>1.18.32</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.16.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.14.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-text</artifactId>
				<version>1.11.0</version>
			</dependency>
			<dependency>
				<groupId>jakarta.jms</groupId>
				<artifactId>jakarta.jms-api</artifactId>
				<version>3.1.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.spec</groupId>
				<artifactId>org.apache.aries.javax.jax.rs-api</artifactId>
				<version>1.0.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.specs</groupId>
				<artifactId>org.apache.servicemix.specs.annotation-api-1.3</artifactId>
				<version>1.3_3</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.specs</groupId>
				<artifactId>org.apache.servicemix.specs.jaxrs-api-2.1</artifactId>
				<version>2.9.1</version>
			</dependency>
			<dependency>
				<groupId>jakarta.xml.bind</groupId>
				<artifactId>jakarta.xml.bind-api</artifactId>
				<version>2.3.3</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.5</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.16.1</version>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${junit-jupiter.version}</version>
				<scope>test</scope>
			</dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-commons</artifactId>
        <version>${junit-platform.version}</version>
        <scope>test</scope>
      </dependency>
			<dependency>
			    <groupId>org.eclipse.platform</groupId>
			    <artifactId>org.eclipse.equinox.event</artifactId>
			    <version>1.6.300</version>
			</dependency>
			<dependency>
			    <groupId>org.osgi</groupId>
			    <artifactId>org.osgi.service.component.annotations</artifactId>
			    <version>1.5.1</version>
			    <scope>provided</scope>
			</dependency>
			<dependency>
			    <groupId>org.osgi</groupId>
			    <artifactId>org.osgi.service.jaxrs</artifactId>
			    <version>1.0.0</version>
			</dependency>
			<dependency>
			    <groupId>org.apache.aries.jax.rs.cxf.repackage</groupId>
			    <artifactId>org.apache.aries.jax.rs.cxf.repackage</artifactId>
			    <version>1.0.10</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>5.11.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-java</artifactId>
				<version>1.2.0</version>
			</dependency>
			<dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>1.26.0</version>
			</dependency>
      <dependency>
        <groupId>com.github.victools</groupId>
        <artifactId>jsonschema-generator</artifactId>
        <version>${schema.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.github.victools</groupId>
        <artifactId>jsonschema-module-jackson</artifactId>
        <version>${schema.version}</version>
        <scope>test</scope>
      </dependency>
      <!-- <dependency>
        <groupId>com.nimbusds</groupId>
        <artifactId>nimbus-jose-jwt</artifactId>
        <version>9.37.3</version>
      </dependency> -->
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.victools</groupId>
      <artifactId>jsonschema-generator</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.victools</groupId>
      <artifactId>jsonschema-module-jackson</artifactId>
    </dependency>
	</dependencies>
	<pluginRepositories>
		<pluginRepository>
			<id>Bnd Snapshots</id>
			<name>Bnd Latest build</name>
			<url>https://bndtools.jfrog.io/bndtools/libs-snapshot-local/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<build>
		<pluginManagement>
			<plugins>
				<!-- Use the bnd-maven-plugin and assemble the symbolic names -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<bnd><![CDATA[
${osgi.core.bundle.headers}
-sources: false
-contract: *
]]></bnd>
					</configuration>
					<executions>
            <execution>
                <goals>
                    <goal>bnd-process</goal>
                </goals>
            </execution>
          </executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.3.0</version>
					<configuration>
						<archive>
							<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
						</archive>
						<skipIfEmpty>true</skipIfEmpty>
					</configuration>
				</plugin>
				<!-- Setup the indexer for running and testing -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-indexer-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<localURLs>REQUIRED</localURLs>
						<attach>false</attach>
					</configuration>
					<executions>
						<execution>
							<id>index</id>
							<!-- If index automatically runs, live coding will fail -->
							<!--
							<goals>
								<goal>index</goal>
							</goals>
							-->
							<configuration>
								<indexName>${project.artifactId}</indexName>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Define the version of the resolver plugin we use -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-resolver-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<skip>true</skip>
						<failOnChanges>false</failOnChanges>
						<bndruns>
						</bndruns>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>resolve</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Define the version of the export plugin we should use -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-export-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<resolve>false</resolve>
						<failOnChanges>false</failOnChanges>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>export</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Define the version of the testing plugin that we use -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-testing-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<testFailureIgnore>true</testFailureIgnore>
						<failOnChanges>false</failOnChanges>
						<skipTests>true</skipTests>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>testing</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Define the version of the baseline plugin we use and 
                    avoid failing when no baseline jar exists. (for example before the first 
                    release) -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-baseline-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<failOnMissing>false</failOnMissing>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>baseline</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-toolchains-plugin</artifactId>
					<version>3.1.0</version>
					<executions>
						<execution>
							<goals>
								<goal>toolchain</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<toolchains>
							<jdk>
								<version>21</version>
							</jdk>
						</toolchains>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<executions>
						<execution>
							<configuration>
								<excludes>
									<exclude>software/amazon/**/*.class</exclude>
									<exclude>*.jar</exclude>
									<exclude>**/software/amazon/**/*.class</exclude>
									<exclude>**/*.jar</exclude>
								</excludes>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- Bind the run plugin globally. It requires direct invocation and explicit
                executions so in all other scenarios it is a noop. Also, it _should_ be run
                from the reactor level in order to be able to observe as many built modules
                as possible so that the running instance can react to build changes. -->
			<plugin>
				<groupId>biz.aQute.bnd</groupId>
				<artifactId>bnd-run-maven-plugin</artifactId>
				<version>${bnd.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.version}</version>
        <configuration>
          <!-- Build, even if tests fail -->
          <testFailureIgnore>true</testFailureIgnore>
        </configuration>
				<dependencies>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>${junit-jupiter.version}</version>
					</dependency>
				</dependencies>
			</plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
            <skip>false</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>3.10.0.2594</version>
      </plugin>
		</plugins>
	</build>
</project>